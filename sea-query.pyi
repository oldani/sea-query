from enum import IntEnum
from typing import Optional, Self

class Query:
    @staticmethod
    def select() -> SelectStatement: ...

class OrderBy(IntEnum):
    Asc = 1
    Desc = 2

class NullsOrder(IntEnum):
    First = 1
    Last = 2

class SelectStatement:
    def from_table(self, name: str) -> Self: ...
    def from_subquery(self, query: SelectStatement) -> Self: ...
    def all(self) -> Self: ...
    def column(self, name: str, table: Optional[str] = None) -> Self: ...
    def columns(self, columns: list[str], table: Optional[str] = None) -> Self: ...
    def distinct(self) -> Self: ...
    def group_by(self, column: str, table: Optional[str] = None) -> Self: ...
    def order_by(self, column: str, order: OrderBy) -> Self: ...
    def order_by_with_nulls(
        self, column: str, order: OrderBy, nulls: NullsOrder
    ) -> Self: ...
    def limit(self, limit: int) -> Self: ...
    def offset(self, offset: int) -> Self: ...
